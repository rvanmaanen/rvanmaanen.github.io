<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="https://r-vm.com/feed.xml" rel="self" type="application/atom+xml" /><link href="https://r-vm.com/" rel="alternate" type="text/html" /><updated>2019-11-05T15:01:18+01:00</updated><id>https://r-vm.com/feed.xml</id><title type="html">r-vm.com</title><subtitle>A blog about anything related to my work, mostly stuff I did or had to Google myself, hope it helps someone else!</subtitle><author><name>Reinier van Maanen</name></author><entry><title type="html">.NETCore.With(“vsCode”).Should().Have(“Unit Tests”)</title><link href="https://r-vm.com/netcore-with-vscode-should-have-unittests" rel="alternate" type="text/html" title=".NETCore.With(“vsCode”).Should().Have(“Unit Tests”)" /><published>2019-03-22T00:00:00+01:00</published><updated>2019-03-22T00:00:00+01:00</updated><id>https://r-vm.com/.NETCore.With(%E2%80%9CvsCode%E2%80%9D).Should().Have(%E2%80%9CUnit%20Tests%E2%80%9D)</id><content type="html" xml:base="https://r-vm.com/netcore-with-vscode-should-have-unittests">&lt;p&gt;My colleagues and I share a lot of knowledge, from helping out customers, to writing &lt;a href=&quot;https://xpirit.com/inspiration/#blogs&quot;&gt;blogs&lt;/a&gt;), speaking at conferences and last but not least: we have our own magazine. If you haven’t received a printed copy somewhere, you can always &lt;a href=&quot;https://xpirit.com/inspiration/#downloads&quot;&gt;download the PDF here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Some of the articles are also available directly &lt;a href=&quot;https://xpirit.com/articles/&quot;&gt;at this page&lt;/a&gt; and as this is my own blog ;) I’ll highlight one of the articles I wrote together with our Azure Functions expert &lt;a href=&quot;https://blog.marcduiker.nl/&quot;&gt;Marc Duiker&lt;/a&gt; in magazine number 7: &lt;strong&gt;&lt;a href=&quot;https://xpirit.com/netcore-withvscode-should-haveunit-tests/&quot;&gt;.NETCore.With(“vsCode”).Should().Have(“Unit Tests”)&lt;/a&gt;&lt;/strong&gt;.&lt;!--excerpt_end--&gt;&lt;/p&gt;

&lt;p&gt;As the name suggests, it’s a guide on setting up a .NET Core project in VSCode, complete with unittests, multiple ways to run them and code coverage visualization. There is also a followup article which isn’t available online yet, but you can read it in &lt;a href=&quot;https://pages.xpirit.com/magazine8&quot;&gt;magazine number 8&lt;/a&gt;. That one goes into more detail on how to set things up when you have multiple unittest projects.&lt;/p&gt;</content><author><name>Reinier van Maanen</name></author><summary type="html">My colleagues and I share a lot of knowledge, from helping out customers, to writing blogs), speaking at conferences and last but not least: we have our own magazine. If you haven’t received a printed copy somewhere, you can always download the PDF here. Some of the articles are also available directly at this page and as this is my own blog ;) I’ll highlight one of the articles I wrote together with our Azure Functions expert Marc Duiker in magazine number 7: .NETCore.With(“vsCode”).Should().Have(“Unit Tests”).</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://r-vm.com/assets/netcorewithvscode/article.png" /></entry><entry><title type="html">Python on Azure Functions - Round 2</title><link href="https://r-vm.com/python-on-azure-functions-round-2" rel="alternate" type="text/html" title="Python on Azure Functions - Round 2" /><published>2018-09-29T00:00:00+02:00</published><updated>2018-09-29T00:00:00+02:00</updated><id>https://r-vm.com/Python-on-Azure-Functions-Round-2</id><content type="html" xml:base="https://r-vm.com/python-on-azure-functions-round-2">&lt;p&gt;A while ago a customer really wanted a solution based on Python. We already decided on Azure Functions, but Python support at that time was still in preview. I decided to evaluate exactly how preview it was. The result wasn’t really pretty: I didn’t get things to work in Azure, we gave up and told the customer we really needed to stick with C# for the time being. You can read all about it &lt;a href=&quot;/python-on-azure-functions&quot;&gt;in this blog post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Python support is still in preview, but on the one hand I know that the team has been working hard to improve things and on the other hand, the Azure Functions v2 runtime &lt;a href=&quot;https://azure.microsoft.com/en-us/blog/introducing-azure-functions-2-0/&quot;&gt;has reached the “general availability” status&lt;/a&gt; which should mean that it’s production ready. So time for round 2, let’s see how things turn out this time.&lt;!--excerpt_end--&gt;&lt;/p&gt;

&lt;h1 id=&quot;tldr&quot;&gt;TL;DR&lt;/h1&gt;
&lt;p&gt;There are still some things that can be improved, but the overall experience was much better than a few months ago. It’s nice to see the product maturing and features getting added, like new templates for Service Bus and Consumption Plan support. It’s still a preview, so you shouldn’t run this in production yet but the different teams are getting there!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r-vm.com/assets/python_on_azure_functions/pythonfunctions.png&quot; alt=&quot;Azure Functions with Python&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h1&gt;
&lt;p&gt;Still the same: &lt;a href=&quot;https://www.python.org/downloads/release/python-366/&quot;&gt;Python 3.6&lt;/a&gt; and the &lt;a href=&quot;https://github.com/Azure/azure-functions-core-tools&quot;&gt;Azure Functions Core tools&lt;/a&gt;. It’s nice to see that the team now correctly states that Python 3.6 is required &lt;a href=&quot;https://github.com/Azure/azure-functions-python-worker/wiki/Create-your-first-Python-function&quot;&gt;in their tutorial&lt;/a&gt;, and not 3.6 or above. Of course I did try running everything with Python 3.7, which gives a proper error message stating 3.6 is required.&lt;/p&gt;

&lt;p&gt;The focus of this blog post will be on Azure Functions and it’s Python support, almost everything written below can be done from a terminal. In a real world scenario you’ll probably be using and IDE like &lt;a href=&quot;https://code.visualstudio.com/download&quot;&gt;Visual Studio Code&lt;/a&gt; with a bunch of extensions, which you can find on &lt;a href=&quot;https://marketplace.visualstudio.com/VSCode&quot;&gt;the marketplace&lt;/a&gt;. The extensions most relevant for this blog post are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Python&lt;/li&gt;
  &lt;li&gt;Azure Functions (New: enable the setting ‘enablePython’ so you can use the extension to create a new Python Azure Functions project. Beware, this is still in preview!)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You should also install the &lt;a href=&quot;https://docs.microsoft.com/en-us/cli/azure/install-azure-cli?view=azure-cli-latest&quot;&gt;Azure CLI&lt;/a&gt; or &lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/azure/install-azurerm-ps?view=azurermps-6.9.0&quot;&gt;Azure PowerShell&lt;/a&gt; for deploying to Azure&lt;/p&gt;

&lt;h1 id=&quot;using-vs-code-to-create-a-new-python-azure-function&quot;&gt;Using VS Code to create a new Python Azure Function:&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;The Azure Functions extension enables you to create new Python function if you enable the setting ‘enablePython’. However, as I have Python 3.7 installed and the extension doesn’t use the Python launcher ‘py’ with the -3.6 flag, it’ll run its scripts on Python 3.7. As stated above, this won’t work. So back to creating a new project the hard way and we’ll open it afterward with VS Code. This functionality will probably work fine if you just have Python 3.6 installed!&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;creating-a-new-python-azure-function-manually&quot;&gt;Creating a new Python Azure Function manually&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;Open your favorite prompt (I’m using &lt;a href=&quot;http://cmder.net/&quot;&gt;cmder&lt;/a&gt;) and issue the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;py -3.6 -m C:\Projects\MyFunctionApp\env&lt;/code&gt; to create a new Python Virtual Environment. By creating the virtual environment within your project directory, VS Code will later automatically detect it.&lt;/li&gt;
  &lt;li&gt;Activate the Virtual Environment my issuing the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C:\Projects\MyFunctionApp\env\Scripts\activate.bat&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Create a new (empty) Function App: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;func init C:\Projects\MyFunctionApp --worker-runtime python&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Add a new function to the app: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;func new&lt;/code&gt;. I picked the HTTP Trigger again, but It’s great to see that the amount of supported template has almost doubled:
    &lt;ul&gt;
      &lt;li&gt;Blob&lt;/li&gt;
      &lt;li&gt;Cosmos DB&lt;/li&gt;
      &lt;li&gt;HTTP&lt;/li&gt;
      &lt;li&gt;Queue&lt;/li&gt;
      &lt;li&gt;Timer&lt;/li&gt;
      &lt;li&gt;Event Grid &lt;em&gt;(new!)&lt;/em&gt;&lt;/li&gt;
      &lt;li&gt;Event Hub &lt;em&gt;(new!)&lt;/em&gt;&lt;/li&gt;
      &lt;li&gt;Service Bus Queue &lt;em&gt;(new!)&lt;/em&gt;&lt;/li&gt;
      &lt;li&gt;Service Bus Topic &lt;em&gt;(new!)&lt;/em&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Time to have a look around. I notice one main difference compared to my previous try: The requirements.txt file now specifies the dependencies in a proper way! The older version of the Azure Functions tools would specify some command that would use GIT to clone an entire repository and build the dependencies on the fly. This was very slow and resulted in issues while deploying. Now it’s just a clean “azure-functions” and “azure-functions-worker”, together with a few others.&lt;/li&gt;
  &lt;li&gt;Let’s run the function locally: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;func start&lt;/code&gt;. It works - on my machine ;) Test with the “REST Client” extension or just visit the URL with your browser.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;deploying-to-azure&quot;&gt;Deploying to Azure&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;First update the requirements.txt file with any new dependencies: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip freeze &amp;gt; requirements.txt&lt;/code&gt;. In my case ptvsd, pylint and a bunch of others are new.&lt;/li&gt;
  &lt;li&gt;Create a new Function App in Azure. There are a couple of ways, &lt;a href=&quot;https://github.com/Azure/Azure-Functions/wiki/Azure-Functions-on-Linux-Preview&quot;&gt;See instructions here&lt;/a&gt; or just &lt;a href=&quot;https://portal.azure.com/?websitesextension_linuxconsumption=true#create/Microsoft.FunctionApp&quot;&gt;follow this URL to create one in the portal&lt;/a&gt;. If using the latter, pick Linux as OS and the Python as Runtime Stack.
    &lt;ul&gt;
      &lt;li&gt;Compared to my previous try, the querystring that enables Python support for functions has changed from &lt;em&gt;?websitesextension_PythonFunctions=true&lt;/em&gt; to &lt;em&gt;?websitesextenion_LinuxConsumption=true&lt;/em&gt;. It appears that consumption plans are now available for Python Azure Functions, making it a proper serverless solution. Previously only App Service Plans were supported.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Back to the CLI. Apparently, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;func azure login&lt;/code&gt; has been removed from the Azure Functions Core Tools and you should use the Azure CLI or Azure PowerShell. To log in with the Azure CLI issue the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;az login&lt;/code&gt; and follow instructions.&lt;/li&gt;
  &lt;li&gt;Use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;az account list --output table&lt;/code&gt; for an overview of your subscriptions and activate the right one with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;az account set --subscription &quot;Subscription Name&quot;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Publish your function app: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;func azure functionapp publish YourFunctionAppName&lt;/code&gt;.
    &lt;ul&gt;
      &lt;li&gt;Error 1: ‘Your app is configured with Azure Files for editing from Azure Portal.’. Use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--force&lt;/code&gt; switch to override this warning.&lt;/li&gt;
      &lt;li&gt;Error 2: ‘ERROR: cannot install wrapt-1.10.11 dependency: binary dependencies without wheels are not supported.  Use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--build-native-deps&lt;/code&gt; option to try building the binary dependencies using a Docker container.’. My first attempt at trying to resolve this error was by just removing the ‘wrapt’ dependency from the requirements.txt, that didn’t work and would be a terrible workaround anyway because we need that dependency. The second attempt was following the suggestion in the error message, use Docker to build dependencies. That seemed to work.
&lt;img src=&quot;https://r-vm.com/assets/python_on_azure_functions_round2/wrapt_error.png&quot; alt=&quot;wrapt error&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Publishing your function app with all the switches: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;func azure functionapp publish YourFunctionAppName --force --build-native-deps&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;After a short while, you’ll see some output which states: “Deployment completed successfully.” Time to try out the function!&lt;/li&gt;
  &lt;li&gt;It works, as you can see in the screenshot below! &lt;img src=&quot;https://r-vm.com/assets/python_on_azure_functions_round2/success.png&quot; alt=&quot;Working Python Function in Azure&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;last-but-not-least-opening-the-project-in-vs-code&quot;&gt;Last but not least, opening the project in VS Code&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;When you open the folder in VS Code, it’ll detect after a while that the project is an Azure Functions project created outside of VS Code and asks if it should initialize the project properly.&lt;/li&gt;
  &lt;li&gt;Something new happens here as well. An error as soon as you click yes. It complains about not being able to activate a virtual environment or install “ptvsd”, because of path troubles. Ptvsd is short for &lt;a href=&quot;https://github.com/Microsoft/ptvsd&quot;&gt;Python Tools for Visual Studio debug server&lt;/a&gt; which lets you debug your Python scripts in VS Code. As I’m mainly interested in the Azure Functions part at the moment and not in any VS Code issues or debugging, we’ll ignore the error for now. I did try and install ptvsd manually by executing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip install ptvsd&lt;/code&gt;, which went fine.&lt;img src=&quot;https://r-vm.com/assets/python_on_azure_functions_round2/ptvsd_error.png&quot; alt=&quot;ptvsd error when initializing&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;As this post was mainly an update / correction for my previous blog post about Python on Azure Functions, I’ll leave it at this!&lt;/li&gt;
&lt;/ol&gt;</content><author><name>Reinier van Maanen</name></author><summary type="html">A while ago a customer really wanted a solution based on Python. We already decided on Azure Functions, but Python support at that time was still in preview. I decided to evaluate exactly how preview it was. The result wasn’t really pretty: I didn’t get things to work in Azure, we gave up and told the customer we really needed to stick with C# for the time being. You can read all about it in this blog post. Python support is still in preview, but on the one hand I know that the team has been working hard to improve things and on the other hand, the Azure Functions v2 runtime has reached the “general availability” status which should mean that it’s production ready. So time for round 2, let’s see how things turn out this time.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://r-vm.com/assets/python_on_azure_functions/pythonfunctions_li.png" /></entry><entry><title type="html">How to make two VM extensions depend on each other in ARM</title><link href="https://r-vm.com/depend-on-multiple-arm-script-extensions" rel="alternate" type="text/html" title="How to make two VM extensions depend on each other in ARM" /><published>2018-08-02T00:00:00+02:00</published><updated>2018-08-02T00:00:00+02:00</updated><id>https://r-vm.com/Howto-make-2-arm%20template-vm-extensions-depend-on-each-other</id><content type="html" xml:base="https://r-vm.com/depend-on-multiple-arm-script-extensions">&lt;p&gt;Recently I helped &lt;a href=&quot;https://rajbos.github.io/&quot;&gt;Rob Bos&lt;/a&gt; by creating an ARM template, that allowed him to spin up a VM in Azure and which would host a Chocolatey Server. Rob wrote &lt;a href=&quot;https://rajbos.github.io/blog/2018/07/20/chocolatey-server-azure&quot;&gt;a nice blog post&lt;/a&gt; about this. As he mentions in his post, there are still some issues with the ARM template. On major thing is fixed though: The DSC step no longer fails and it’s no longer necessary to manually execute PowerShell. Here’s how I fixed it.&lt;!--excerpt_end--&gt;&lt;/p&gt;

&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img src=&quot;https://r-vm.com/assets/multiple_vm_extensions/msazure.png&quot; alt=&quot;Microsoft Azure&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;how-to-make-powershelldscextension-and-customscriptextension-depend-on-each-other-in-arm&quot;&gt;How to make PowershellDscExtension and CustomScriptExtension depend on each other in ARM&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;Add the VM and both extensions to your ARM template and give them proper names.&lt;/li&gt;
  &lt;li&gt;Create the dependsOn element at the CustomScriptExtension and follow the next steps to determine what to fill in here.&lt;/li&gt;
  &lt;li&gt;Take the type and name of the VM your extensions will run on, in the example below that would be: “Microsoft.Compute/virtualMachines/ChocolateyServer”&lt;/li&gt;
  &lt;li&gt;Add /extensions and then /name-of-the-extension-you-depend-on, so that would be: “Microsoft.Compute/virtualMachines/ChocolateyServer/extensions/NeverGonna”&lt;/li&gt;
  &lt;li&gt;Enjoy your dependency! If you need any more help, have a look at the example below or reach out!&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So the key thing is: you’re not depending on something by just it’s name, you’re depending on the (end of the) resource identifier. An easy way to find this identifier is by going to the &lt;a href=&quot;https://resources.azure.com&quot;&gt;Azure resource explorer&lt;/a&gt;, which gives you a nice view of all the resources in your subscriptions. Just add the DSC first, then check out the identifier and then add the script.&lt;/p&gt;

&lt;p&gt;Something to watch out for is that my extensions were actually named: “ChocServ/PowershellDscExtension” and “ChocServ/CustomScriptExtension”. However, only the latter part was used in my resource identifiers. So in my dependsOn I needed to leave out the “ChocServ/” part. Again, have a look at the &lt;a href=&quot;https://resources.azure.com&quot;&gt;Azure resource explorer&lt;/a&gt; to find out the exact identifier.&lt;/p&gt;

&lt;h1 id=&quot;it-should-look-something-like-this&quot;&gt;It should look something like this&lt;/h1&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    {
      &quot;type&quot;: &quot;Microsoft.Compute/virtualMachines&quot;,
      &quot;name&quot;: ChocolateyServer&quot;,
    },
    {
      &quot;type&quot;: &quot;Microsoft.Compute/virtualMachines/extensions&quot;,
      &quot;name&quot;: &quot;NeverGonna&quot;,
      &quot;dependsOn&quot;: [
        &quot;Microsoft.Compute/virtualMachines/ChocolateyServer&quot;
      ]
    },
    {
      &quot;type&quot;: &quot;Microsoft.Compute/virtualMachines/extensions&quot;,
      &quot;name&quot;: &quot;GiveYouUp&quot;,
      &quot;dependsOn&quot;: [
        &quot;Microsoft.Compute/virtualMachines/ChocolateyServer/extensions/NeverGonna&quot;
      ]
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;nice-so-now-i-can-have-multiple-scripts-depending-on-each-other&quot;&gt;Nice! So now I can have multiple scripts depending on each other?&lt;/h1&gt;
&lt;p&gt;Nope. One thing I learned while fixing my ARM template, is that you can’t have multiple PowershellDscExtension or multiple CustomScriptExtension in one ARM template. Not sure why. You can have a single one of both though. So if you came here looking how to execute multiple PowerShell scripts, you’re looking in the wrong place. There are ways to do that though and &lt;a href=&quot;https://stackoverflow.com/questions/36372049/how-to-run-multiple-powershell-scripts-at-the-same-time&quot;&gt;here’s a starting point&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;remaining-issues-in-the-chocolatey-server-arm-template&quot;&gt;Remaining issues in the Chocolatey Server ARM template&lt;/h1&gt;
&lt;p&gt;There are some small remaining issues with the ARM template, &lt;a href=&quot;https://github.com/rvanmaanen/arm.chocolateyserver/issues&quot;&gt;which you can see here&lt;/a&gt;. Feel free to submit a pull request or add new issues if you have any. I’ll try and fix them. You can also find the ChocolateyServer ARM template there.&lt;/p&gt;</content><author><name>Reinier van Maanen</name></author><summary type="html">Recently I helped Rob Bos by creating an ARM template, that allowed him to spin up a VM in Azure and which would host a Chocolatey Server. Rob wrote a nice blog post about this. As he mentions in his post, there are still some issues with the ARM template. On major thing is fixed though: The DSC step no longer fails and it’s no longer necessary to manually execute PowerShell. Here’s how I fixed it.</summary></entry><entry><title type="html">Python Azure Function with Visual Studio Code</title><link href="https://r-vm.com/python-on-azure-functions" rel="alternate" type="text/html" title="Python Azure Function with Visual Studio Code" /><published>2018-07-18T00:00:00+02:00</published><updated>2018-07-18T00:00:00+02:00</updated><id>https://r-vm.com/Python-on-Azure-Functions</id><content type="html" xml:base="https://r-vm.com/python-on-azure-functions">&lt;p&gt;&lt;em&gt;Update: Others, like Jeff Hollan, have been able to get am Azure Function working with Python. He did have to change something in the requirements.txt as well, same as I mentioned here. Have a look at &lt;a href=&quot;https://github.com/Azure/azure-functions-python-worker/issues/164&quot;&gt;this GitHub issue&lt;/a&gt;. I’ll give it another shot myself soon. Update: &lt;a href=&quot;/python-on-azure-functions-round-2&quot;&gt;Read about my second attempt here&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Googling led me to a couple of blog posts about Python on Azure Functions. Those led me to believe Python on Azure Functions is using Windows as OS, uses a very old Python version and is very slow.
Even Microsoft’s own &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/azure-functions/supported-languages&quot;&gt;Azure Functions Supported Languages&lt;/a&gt; is stating Python isn’t supported on runtime 2.x.&lt;/p&gt;

&lt;p&gt;Finally, I went to the &lt;a href=&quot;https://github.com/Azure/azure-functions-python-worker&quot;&gt;Azure Functions Python Worker GitHub page&lt;/a&gt; and read something a little more inspiring: Python 3.6, Linux and the 2.x runtime :-) I decided to give it a try on my Windows 10 machine with Visual Studio Code. Here is what I did and what my experience and result was like.
&lt;!--excerpt_end--&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r-vm.com/assets/python_on_azure_functions/pythonfunctions.png&quot; alt=&quot;Azure Functions with Python&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;heads-up&quot;&gt;Heads up&lt;/h1&gt;
&lt;p&gt;Azure Functions in Python support in Visual Studio Code is still very basic. Building, testing, debugging and publishing is still done with the CLI. Support for a truely serverless deployment via the Consumption Plan isn’t there as well yet, for now you’re stuck with an App Service Plan. Last, not all bindings that are available for C# are available for Python yet, so no cool Service Bus integration at this moment. &lt;a href=&quot;https://github.com/Azure/azure-functions-python-worker/blob/dev/README.md&quot;&gt;All these issues are being worked on though!&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;tldr&quot;&gt;TL;DR&lt;/h1&gt;
&lt;p&gt;What you would find if you would read this to the end, is that I ended up with a terrible exception when running from Azure. Everything works on my machine, but this definately isn’t production ready yet. Hence the preview status I guess ;)&lt;/p&gt;

&lt;h1 id=&quot;setting-up-your-ide&quot;&gt;Setting up your IDE&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://code.visualstudio.com/download&quot;&gt;Download and install Visual Studio Code&lt;/a&gt;. Make sure to install these extensions. You can find them &lt;a href=&quot;https://marketplace.visualstudio.com/VSCode&quot;&gt;on the marketplace&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Python&lt;/li&gt;
  &lt;li&gt;Azure Functions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You probably want some of these too if you plan to do more with VSCode:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Visual Studio Team Services&lt;/li&gt;
  &lt;li&gt;GitLens&lt;/li&gt;
  &lt;li&gt;Azure CLI Tools&lt;/li&gt;
  &lt;li&gt;REST Client&lt;/li&gt;
  &lt;li&gt;PowerShell&lt;/li&gt;
  &lt;li&gt;Docker&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;setting-up-your-development-environment&quot;&gt;Setting up your development environment&lt;/h1&gt;
&lt;p&gt;Read &lt;a href=&quot;https://github.com/Azure/azure-functions-python-worker/wiki/Create-Function-(CLI)&quot;&gt;this tutorial&lt;/a&gt;. It has some issues and differs from what we’re trying to do, so just read through the tutorial, read up on anything you’re not familiar with and then follow the steps listed below.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Install the Azure Functions Core tools v2 &lt;a href=&quot;https://github.com/Azure/azure-functions-core-tools#installing&quot;&gt;by following this guide&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The requirements in the tutorial state Python 3.6.4 or above. So, I installed the latest Python 3.7. Bad idea, as the scripts only work with 3.6. So I installed 3.6 next to 3.7 and unchecked the “Add to Path” option to make sure there are no conflicts. If you don’t want to do anything else with Python, just install 3.6 only. You can find all installers at &lt;a href=&quot;https://www.python.org/downloads/windows/&quot;&gt;the Python website&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Create a 3.6 virtual environment inside your soon to-be project directory, by issuing this command to the Python launcher py: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;py -3.6 -m venv C:\Projects\MyFunctionApp\env&lt;/code&gt;.
    &lt;ul&gt;
      &lt;li&gt;FYI: You can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;py -0&lt;/code&gt; to check which Python versions are available, if you have multiple installed.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Next you have to activate the virtual environment. Do this by executing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C:\Projects\MyFunctionApp\env\Scripts\activate.bat&lt;/code&gt;. This results in a new prompt.
    &lt;ul&gt;
      &lt;li&gt;FYI: To exit the activated virtual environment, just type in the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;deactivate&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;From within the virtual environment, issue the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;func init C:\Projects\MyFunctionApp --worker-runtime python&lt;/code&gt; to initialize an empty Azure Functions App in the already existing “C:\Projects\MyFunctionApp” directory.&lt;/li&gt;
  &lt;li&gt;By initializing the virtual environment inside of the project directory, VSCode will automatically detect this virtual environment. Be sure to add the “env” directory to your .gitignore file! This appears to be &lt;a href=&quot;https://packaging.python.org/guides/installing-using-pip-and-virtualenv/&quot;&gt;a best practice&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;You should now have the following structure:
    &lt;ul&gt;
      &lt;li&gt;C:\Projects\MyFunctionApp, containing your Azure Function App.&lt;/li&gt;
      &lt;li&gt;C:\Projects\MyFunctionApp\env, containing a Python 3.6 virtual environment, which is just a clean Python environment, exclusively for this project.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Start Visual Studio code and open the folder “C:\Projects\MyFunctionApp” and click ‘Yes’ when asked if you want to initialize the project for optimal use with VS Code. Pick ‘Python’ in the next step.
&lt;img src=&quot;https://r-vm.com/assets/python_on_azure_functions/initialize.jpg&quot; alt=&quot;Initialize&quot; /&gt;&lt;br /&gt;&lt;br /&gt;
&lt;img src=&quot;https://r-vm.com/assets/python_on_azure_functions/language.jpg&quot; alt=&quot;Language&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Congratulations, you now have a working, empty, Python Azure Function App! :-)&lt;/p&gt;

&lt;h1 id=&quot;adding-a-function-to-your-app&quot;&gt;Adding a function to your app:&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;Make sure your virtual environment is being used:
    &lt;ul&gt;
      &lt;li&gt;By clicking on the “Python 3.6.6 (venv)” button, bottom-left in the blue status bar, and choosing the one that points to your virtual environment if it isn’t already.
&lt;img src=&quot;https://r-vm.com/assets/python_on_azure_functions/environment.jpg&quot; alt=&quot;Environment&quot; /&gt;&lt;/li&gt;
      &lt;li&gt;You can also use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Control-Shift-P&lt;/code&gt; shortcut and type: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Python: Select Interpreter&lt;/code&gt;, which results in the same dropdown.
&lt;img src=&quot;https://r-vm.com/assets/python_on_azure_functions/interpreter.jpg&quot; alt=&quot;Interpreter&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Open a Python terminal in VSCode by pressing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Control-Shift-P&lt;/code&gt; and then type: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Python: Create Terminal&lt;/code&gt;. This should supply you with a shell within your project directory and automatically activate your Python virtual environment.
&lt;img src=&quot;https://r-vm.com/assets/python_on_azure_functions/terminal.jpg&quot; alt=&quot;Terminal&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;You can doublecheck if you’re in your virtual environment by looking at the prompt, it should start with (env), or whatever your virtual environment is called.
    &lt;ul&gt;
      &lt;li&gt;FIY: If you have multiple Python versions installed, when you issue the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;python --version&lt;/code&gt; from your virtual environment, it will still say 3.7.0 or whatever is on your system path. The virtual environment does have its own python executable in “Scripts\python.exe”, so if you issue the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;env\Scripts\python --version&lt;/code&gt; it will say 3.6.6. Not sure if or when this will be an issue. Tools such as pip (see the section about fixing missing modules) are smart enough to notice they’re being run inside a virtual environment and automatically adjust.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Adding a function is straightforward, type: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;func new&lt;/code&gt;. You can then choose which kind of trigger. These are supported at this moment:
    &lt;ul&gt;
      &lt;li&gt;Blob&lt;/li&gt;
      &lt;li&gt;Cosmos DB&lt;/li&gt;
      &lt;li&gt;HTTP&lt;/li&gt;
      &lt;li&gt;Queue&lt;/li&gt;
      &lt;li&gt;Timer&lt;br /&gt;&lt;img src=&quot;https://r-vm.com/assets/python_on_azure_functions/funcnew.jpg&quot; alt=&quot;Func new&quot; /&gt;&lt;br /&gt;&lt;br /&gt;
&lt;img src=&quot;https://r-vm.com/assets/python_on_azure_functions/funcnew2.jpg&quot; alt=&quot;Func new 2&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;When opening the “__init__.py” file from your new function, VSCode will probably complain about no linter being installed. Install it when asked for.&lt;/li&gt;
  &lt;li&gt;When you re-open the “ __init__.py” file, you should get the error “Unable to import ‘azure.functions’”. This is correct, as that module isn’t available yet.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;fixing-your-missing-modules---update&quot;&gt;Fixing your missing modules - update:&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;You probably want to adjust the requirements.txt and get rid of the whole “-e git+https://github….” line and replace it with “azure-functions”. That just downloads the latest azure-functions module, without any GIT clone, manual compiling or necessity for Visual C++ 14.0. It’s a whole lot faster too. No idea why this isn’t the default configuration when creating a new Function App with the Azure Function Core Tools.&lt;/li&gt;
  &lt;li&gt;Run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip install -r .\requirements.txt&lt;/code&gt; from the Python terminal and you’re good to go.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;fixing-your-missing-modules---the-original&quot;&gt;Fixing your missing modules - the original:&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;All dependencies are listed in the requirements.txt file. You can install them by issuing this command in your Python terminal: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip install -r .\requirements.txt&lt;/code&gt;.
    &lt;ul&gt;
      &lt;li&gt;If you’re serious about your Python development you should have a look at &lt;a href=&quot;https://docs.pipenv.org/&quot;&gt;pipenv&lt;/a&gt;, which addresses some issues with pip and virtual environments.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Installing the dependencies will probably fail with the message: “Microsoft Visual C++ 14.0 is required” and sent you to an URL which doesn’t exist. Nice ;) Install &lt;a href=&quot;https://visualstudio.microsoft.com/downloads/#build-tools-for-visual-studio-2017&quot;&gt;Visual Studio Build Tools 2017&lt;/a&gt; to fix this. Have a look at &lt;a href=&quot;https://wiki.python.org/moin/WindowsCompilers&quot;&gt;Windows Compilers&lt;/a&gt; for more information.&lt;/li&gt;
  &lt;li&gt;I probably did something wrong the first time installing, as I still got the same error after installing. Started up “Visual Studio Installer” again to modify my “Visual Studio Build Tools 2017” installation and noticed the workload “Visual C++ build tools” wasn’t checked at all. So be sure to mark that checkbox!
    &lt;ul&gt;
      &lt;li&gt;Do not uncheck any of the individual components installed by that workload, like the Windows 10 SDK. That results the following error message when installing the dependencies: “fatal error C1083: Cannot open include file: ‘io.h’: No such file or directory”.
&lt;img src=&quot;https://r-vm.com/assets/python_on_azure_functions/vcbuildtools.jpg&quot; alt=&quot;Visual C++ Build Tools&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Rerun &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip install -r .\requirements.txt&lt;/code&gt; and have quite some patience as it is cloning the Azure Functions Python Worker repository and builds it, I think ;)
    &lt;ul&gt;
      &lt;li&gt;A “src” directory stays behind after installation, as far as I know you can safely delete this.&lt;/li&gt;
      &lt;li&gt;FIW: You can run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip list&lt;/code&gt; to see which modules are installed.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;running-locally&quot;&gt;Running locally&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;Easy, just type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;func host start&lt;/code&gt; in your Python terminal. It accepts all sorts of parameters, check out &lt;a href=&quot;https://github.com/Azure/azure-functions-python-worker/wiki/Create-Function-(CLI)&quot;&gt;the tutorial mentioned earlier&lt;/a&gt; for those.&lt;/li&gt;
  &lt;li&gt;For easy testing of HTTP triggers I recommend the &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=humao.rest-client&quot;&gt;REST Client extension for VSCode&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://r-vm.com/assets/python_on_azure_functions/localrun.jpg&quot; alt=&quot;Local&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now probably everything up until here was sort of smooth, so brace yourself for the next part ;)&lt;/p&gt;

&lt;h1 id=&quot;publishing-to-azure&quot;&gt;Publishing to Azure&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;Type in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pip freeze &amp;gt; requirements.txt&lt;/code&gt; in your Python terminal. This generates a new requirements.txt with any new dependencies. This is used in the Docker build when publishing.&lt;/li&gt;
  &lt;li&gt;Use &lt;a href=&quot;https://portal.azure.com/?websitesextension_pythonFunctions=true#create/Microsoft.FunctionApp&quot;&gt;this magic URL&lt;/a&gt; to enable Python when creating a new App Function. Have a look at the querystring! Btw, you must pick Linux to be able to choose Python.
    &lt;ul&gt;
      &lt;li&gt;When I navigated to my new Function App the result was a HTTP 502 error for quite some time. After a while the regular “Your Function App 2.0 preview is up and running” website came up. Something was very slow.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Now just follow the steps from the tutorial:
    &lt;ul&gt;
      &lt;li&gt;Log into your Azure account: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;func azure login&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Set your subscription if you have more than one: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;func azure subscriptions list&lt;/code&gt; &amp;amp; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;func azure account set &amp;lt;subscription id&amp;gt;&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Publish to the function app created in step 2: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;func azure functionapp publish &amp;lt;app name&amp;gt;&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Publishing will again take quite some time. This is a known issue and apparently is being worked on. If you’re still building the azure-functions-python-worker code, it doesn’t seem to end at all and gets stuck on uploading artifact.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;trying-it-out&quot;&gt;Trying it out!&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;After fetching the URL for my HTTP trigger from the Azure Portal, I opened my favorite browser and hit the endpoint. HTTP ERROR 500.&lt;/li&gt;
  &lt;li&gt;Opened up AppInsights, which gave me a totally worthless stacktrace (see below), after which I gave up. I might submit a ticket later and post a new blog with the solution if I manage to fix this.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;what-next-if-you-do-manage-to-get-something-working&quot;&gt;What next if you do manage to get something working&lt;/h1&gt;
&lt;p&gt;Well, the next thing on your list should probably be building a proper CI/CD pipeline for this. And bonus, you’ll probably spend less time waiting too. You’re on your own for that, but you can always reach out to me if you need any help!&lt;/p&gt;

&lt;h1 id=&quot;the-exception-nothing-below-this-dont-bother-scrolling-&quot;&gt;The exception (nothing below this, don’t bother scrolling ;))&lt;/h1&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;Microsoft.Azure.WebJobs.Host.FunctionInvocationException:
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Host.Executors.FunctionExecutor+&amp;lt;ExecuteWithLoggingAsync&amp;gt;d__15.MoveNext (Microsoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: C:\projects\azure-webjobs-sdk-rqm4t\src\Microsoft.Azure.WebJobs.Host\Executors\FunctionExecutor.csMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: 275)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Host.Executors.FunctionExecutor+&amp;lt;TryExecuteAsync&amp;gt;d__12.MoveNext (Microsoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: C:\projects\azure-webjobs-sdk-rqm4t\src\Microsoft.Azure.WebJobs.Host\Executors\FunctionExecutor.csMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: 75)
Inner exception System.AggregateException handled at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw:
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Script.Description.WorkerLanguageInvoker+&amp;lt;InvokeCore&amp;gt;d__6.MoveNext (Microsoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null: /azure-functions-host-2.0.11857-alpha/src/WebJobs.Script/Description/Rpc/WorkerLanguageInvoker.csMicrosoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null: 73)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Script.Description.FunctionInvokerBase+&amp;lt;Invoke&amp;gt;d__24.MoveNext (Microsoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null: /azure-functions-host-2.0.11857-alpha/src/WebJobs.Script/Description/FunctionInvokerBase.csMicrosoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null: 84)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Script.Description.FunctionGenerator+&amp;lt;Coerce&amp;gt;d__3`1.MoveNext (Microsoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null: /azure-functions-host-2.0.11857-alpha/src/WebJobs.Script/Description/FunctionGenerator.csMicrosoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null: 225)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Host.Executors.FunctionInvoker`2+&amp;lt;InvokeAsync&amp;gt;d__9.MoveNext (Microsoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: C:\projects\azure-webjobs-sdk-rqm4t\src\Microsoft.Azure.WebJobs.Host\Executors\FunctionInvoker.csMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: 63)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Host.Executors.FunctionExecutor+&amp;lt;InvokeAsync&amp;gt;d__23.MoveNext (Microsoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: C:\projects\azure-webjobs-sdk-rqm4t\src\Microsoft.Azure.WebJobs.Host\Executors\FunctionExecutor.csMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: 532)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Host.Executors.FunctionExecutor+&amp;lt;ExecuteWithWatchersAsync&amp;gt;d__22.MoveNext (Microsoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: C:\projects\azure-webjobs-sdk-rqm4t\src\Microsoft.Azure.WebJobs.Host\Executors\FunctionExecutor.csMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: 483)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Host.Executors.FunctionExecutor+&amp;lt;ExecuteWithLoggingAsync&amp;gt;d__21.MoveNext (Microsoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: C:\projects\azure-webjobs-sdk-rqm4t\src\Microsoft.Azure.WebJobs.Host\Executors\FunctionExecutor.csMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: 426)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Host.Executors.FunctionExecutor+&amp;lt;ExecuteWithLoggingAsync&amp;gt;d__15.MoveNext (Microsoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: C:\projects\azure-webjobs-sdk-rqm4t\src\Microsoft.Azure.WebJobs.Host\Executors\FunctionExecutor.csMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: 231)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Script.Description.WorkerLanguageInvoker+&amp;lt;InvokeCore&amp;gt;d__6.MoveNext (Microsoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null: /azure-functions-host-2.0.11857-alpha/src/WebJobs.Script/Description/Rpc/WorkerLanguageInvoker.csMicrosoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null: 73)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Script.Description.FunctionInvokerBase+&amp;lt;Invoke&amp;gt;d__24.MoveNext (Microsoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null: /azure-functions-host-2.0.11857-alpha/src/WebJobs.Script/Description/FunctionInvokerBase.csMicrosoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null: 84)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Script.Description.FunctionGenerator+&amp;lt;Coerce&amp;gt;d__3`1.MoveNext (Microsoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null: /azure-functions-host-2.0.11857-alpha/src/WebJobs.Script/Description/FunctionGenerator.csMicrosoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null: 225)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Host.Executors.FunctionInvoker`2+&amp;lt;InvokeAsync&amp;gt;d__9.MoveNext (Microsoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: C:\projects\azure-webjobs-sdk-rqm4t\src\Microsoft.Azure.WebJobs.Host\Executors\FunctionInvoker.csMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: 63)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Host.Executors.FunctionExecutor+&amp;lt;InvokeAsync&amp;gt;d__23.MoveNext (Microsoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: C:\projects\azure-webjobs-sdk-rqm4t\src\Microsoft.Azure.WebJobs.Host\Executors\FunctionExecutor.csMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: 532)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Host.Executors.FunctionExecutor+&amp;lt;ExecuteWithWatchersAsync&amp;gt;d__22.MoveNext (Microsoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: C:\projects\azure-webjobs-sdk-rqm4t\src\Microsoft.Azure.WebJobs.Host\Executors\FunctionExecutor.csMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: 483)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Host.Executors.FunctionExecutor+&amp;lt;ExecuteWithLoggingAsync&amp;gt;d__21.MoveNext (Microsoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: C:\projects\azure-webjobs-sdk-rqm4t\src\Microsoft.Azure.WebJobs.Host\Executors\FunctionExecutor.csMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: 426)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Host.Executors.FunctionExecutor+&amp;lt;ExecuteWithLoggingAsync&amp;gt;d__15.MoveNext (Microsoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: C:\projects\azure-webjobs-sdk-rqm4t\src\Microsoft.Azure.WebJobs.Host\Executors\FunctionExecutor.csMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: 231)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Script.Description.WorkerLanguageInvoker+&amp;lt;InvokeCore&amp;gt;d__6.MoveNext (Microsoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null: /azure-functions-host-2.0.11857-alpha/src/WebJobs.Script/Description/Rpc/WorkerLanguageInvoker.csMicrosoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null: 73)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Script.Description.FunctionInvokerBase+&amp;lt;Invoke&amp;gt;d__24.MoveNext (Microsoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null: /azure-functions-host-2.0.11857-alpha/src/WebJobs.Script/Description/FunctionInvokerBase.csMicrosoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null: 84)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Script.Description.FunctionGenerator+&amp;lt;Coerce&amp;gt;d__3`1.MoveNext (Microsoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null: /azure-functions-host-2.0.11857-alpha/src/WebJobs.Script/Description/FunctionGenerator.csMicrosoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null: 225)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Host.Executors.FunctionInvoker`2+&amp;lt;InvokeAsync&amp;gt;d__9.MoveNext (Microsoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: C:\projects\azure-webjobs-sdk-rqm4t\src\Microsoft.Azure.WebJobs.Host\Executors\FunctionInvoker.csMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: 63)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Host.Executors.FunctionExecutor+&amp;lt;InvokeAsync&amp;gt;d__23.MoveNext (Microsoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: C:\projects\azure-webjobs-sdk-rqm4t\src\Microsoft.Azure.WebJobs.Host\Executors\FunctionExecutor.csMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: 532)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Host.Executors.FunctionExecutor+&amp;lt;ExecuteWithWatchersAsync&amp;gt;d__22.MoveNext (Microsoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: C:\projects\azure-webjobs-sdk-rqm4t\src\Microsoft.Azure.WebJobs.Host\Executors\FunctionExecutor.csMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: 483)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Host.Executors.FunctionExecutor+&amp;lt;ExecuteWithLoggingAsync&amp;gt;d__21.MoveNext (Microsoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: C:\projects\azure-webjobs-sdk-rqm4t\src\Microsoft.Azure.WebJobs.Host\Executors\FunctionExecutor.csMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: 426)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Host.Executors.FunctionExecutor+&amp;lt;ExecuteWithLoggingAsync&amp;gt;d__15.MoveNext (Microsoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: C:\projects\azure-webjobs-sdk-rqm4t\src\Microsoft.Azure.WebJobs.Host\Executors\FunctionExecutor.csMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: 231)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Script.Description.WorkerLanguageInvoker+&amp;lt;InvokeCore&amp;gt;d__6.MoveNext (Microsoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null: /azure-functions-host-2.0.11857-alpha/src/WebJobs.Script/Description/Rpc/WorkerLanguageInvoker.csMicrosoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null: 73)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Script.Description.FunctionInvokerBase+&amp;lt;Invoke&amp;gt;d__24.MoveNext (Microsoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null: /azure-functions-host-2.0.11857-alpha/src/WebJobs.Script/Description/FunctionInvokerBase.csMicrosoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null: 84)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Script.Description.FunctionGenerator+&amp;lt;Coerce&amp;gt;d__3`1.MoveNext (Microsoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null: /azure-functions-host-2.0.11857-alpha/src/WebJobs.Script/Description/FunctionGenerator.csMicrosoft.Azure.WebJobs.Script, Version=2.0.0.0, Culture=neutral, PublicKeyToken=null: 225)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Host.Executors.FunctionInvoker`2+&amp;lt;InvokeAsync&amp;gt;d__9.MoveNext (Microsoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: C:\projects\azure-webjobs-sdk-rqm4t\src\Microsoft.Azure.WebJobs.Host\Executors\FunctionInvoker.csMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: 63)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Host.Executors.FunctionExecutor+&amp;lt;InvokeAsync&amp;gt;d__23.MoveNext (Microsoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: C:\projects\azure-webjobs-sdk-rqm4t\src\Microsoft.Azure.WebJobs.Host\Executors\FunctionExecutor.csMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: 532)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Host.Executors.FunctionExecutor+&amp;lt;ExecuteWithWatchersAsync&amp;gt;d__22.MoveNext (Microsoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: C:\projects\azure-webjobs-sdk-rqm4t\src\Microsoft.Azure.WebJobs.Host\Executors\FunctionExecutor.csMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: 483)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Host.Executors.FunctionExecutor+&amp;lt;ExecuteWithLoggingAsync&amp;gt;d__21.MoveNext (Microsoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: C:\projects\azure-webjobs-sdk-rqm4t\src\Microsoft.Azure.WebJobs.Host\Executors\FunctionExecutor.csMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: 426)
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification (System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e)
   at Microsoft.Azure.WebJobs.Host.Executors.FunctionExecutor+&amp;lt;ExecuteWithLoggingAsync&amp;gt;d__15.MoveNext (Microsoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=nullMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: C:\projects\azure-webjobs-sdk-rqm4t\src\Microsoft.Azure.WebJobs.Host\Executors\FunctionExecutor.csMicrosoft.Azure.WebJobs.Host, Version=3.0.0.0, Culture=neutral, PublicKeyToken=null: 231)
Inner exception System.Exception handled at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw:
Inner exception System.Exception handled at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw:
Inner exception System.Exception handled at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw:&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>Reinier van Maanen</name></author><summary type="html">Update: Others, like Jeff Hollan, have been able to get am Azure Function working with Python. He did have to change something in the requirements.txt as well, same as I mentioned here. Have a look at this GitHub issue. I’ll give it another shot myself soon. Update: Read about my second attempt here Googling led me to a couple of blog posts about Python on Azure Functions. Those led me to believe Python on Azure Functions is using Windows as OS, uses a very old Python version and is very slow. Even Microsoft’s own Azure Functions Supported Languages is stating Python isn’t supported on runtime 2.x. Finally, I went to the Azure Functions Python Worker GitHub page and read something a little more inspiring: Python 3.6, Linux and the 2.x runtime :-) I decided to give it a try on my Windows 10 machine with Visual Studio Code. Here is what I did and what my experience and result was like.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://r-vm.com/assets/python_on_azure_functions/pythonfunctions_li.png" /></entry><entry><title type="html">NDC Oslo 2018</title><link href="https://r-vm.com/ndc-oslo-2018" rel="alternate" type="text/html" title="NDC Oslo 2018" /><published>2018-06-24T00:00:00+02:00</published><updated>2018-06-24T00:00:00+02:00</updated><id>https://r-vm.com/NDC-Oslo-2018</id><content type="html" xml:base="https://r-vm.com/ndc-oslo-2018">&lt;p&gt;Joining Xpirit has opened up a lot of cool possibilities for me, like being able to visit conferences as Build or NDC. So let’s talk about my first visit to NDC Oslo, 13-15 june 2018.&lt;!--excerpt_end--&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r-vm.com/assets/ndc_oslo_2018/Oslo-NDC.jpg&quot; alt=&quot;NDC Oslo 2018&quot; width=&quot;503px&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;fun-stuff-first&quot;&gt;Fun stuff first!&lt;/h1&gt;
&lt;p&gt;I went to Oslo a few days early to enjoy the city. There’s really lots of things to see and do:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Just walk around outside of the city center. There are parks, art, nice bars which reminded me of the ruin bars in Budapest and just so much to see.&lt;/li&gt;
  &lt;li&gt;Visit Vigeland park for a nice walk. Won’t take that long so its a nice filler. Get a burger at Illegal Burgers afterward!&lt;/li&gt;
  &lt;li&gt;Get a few beers at the Vaterland bar and enjoy the awesome music (that is, if you like metal ;))&lt;/li&gt;
  &lt;li&gt;Take a trip to Bygdøy, visit a museum and then lay down at the beach.&lt;/li&gt;
  &lt;li&gt;Meet up with the locals and have them show you the hidden gems of the city.&lt;/li&gt;
  &lt;li&gt;Visit NDC if you have the chance. And make sure you attend the Pubconf as well!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://r-vm.com/assets/ndc_oslo_2018/Oslo-DatteraTilHagen.jpg&quot; alt=&quot;Dattera til Hagen&quot; height=&quot;250px&quot; /&gt;
&lt;img src=&quot;https://r-vm.com/assets/ndc_oslo_2018/Oslo-PublicBath.jpg&quot; alt=&quot;Oslo public bath&quot; height=&quot;250px&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;thoughts-after-ndc&quot;&gt;Thoughts after NDC&lt;/h1&gt;
&lt;p&gt;What a great conference. Everything is well organised, lot’s of food, breaks between every session, high quality talks, nice location - make sure you check into the Radisson Blu next door. Learned a lot as well: Can’t trust anything on the internet, not the URL you’re seeing and not the certificate that’s being used.. Also we have so much to learn about the way we’re teaching programming (apparently reading code out aloud lowers the amount of syntax errors kids make - check out Felienne’s talk about this) and ofcourse all the coding stuff :)&lt;/p&gt;

&lt;p&gt;Was impressed by AWS Lambda and the NuGet package they created to bridge the gap between their API Gateway and ASP.NET Core, which enables you to easily deploy your webapp to serverless environment. Ofcourse this has some drawbacks, as ASP.NET isn’t as optimized as a native serverless solution and you end up paying for this. However, this can be negated a bit by applying some of the practices I learned in another session.&lt;/p&gt;

&lt;p&gt;Most people, including me, just end up adding MVC support in a webapp with a statement as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;services.AddMvc();&lt;/code&gt;. There is an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.AddMvcCore()&lt;/code&gt; method as well which gets called within the AddMvc method. The AddMvcCore method has nothing to do with the .NET Core framework itself but just registers the basic MVC stuff so you can choose if and what other things you want support for. You can even take this further and just take the routing part of ASP.NET. Watch Filip’s session about adapting the ASP.NET framework on how to do this and some information about the amount of performance gain. Steve Gordon also has &lt;a href=&quot;https://www.stevejgordon.co.uk/aspnetcore-anatomy-deep-dive-index&quot;&gt;a nice blog about this&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://r-vm.com/assets/ndc_oslo_2018/awslamda.png&quot; alt=&quot;AWS Lamda&quot; height=&quot;150px&quot; /&gt;
&lt;img src=&quot;https://r-vm.com/assets/ndc_oslo_2018/azurefunctions.png&quot; alt=&quot;Azure Functions&quot; height=&quot;150px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Had a talk about this AWS-ASP.NET bridge with Jeff Hollan and asked if a similar feature was coming to Azure Functions. At the moment this technically isn’t possible, but at the end of the year it would. However, he wasn’t sure if it’s a feature they’d adopt because of it’s drawbacks. They are keeping an eye on it though, because it does have it’s usecases, especially when bringing down the footprint of the ASP.NET framework by just using what you need.&lt;/p&gt;

&lt;h1 id=&quot;check-out-these-videos&quot;&gt;Check out these videos&lt;/h1&gt;
&lt;p&gt;Not going into every session listed below, but a few that stood out in my opinion. You should really watch the video’s. Added links for the ones I could find already, mostly from earlier conferences. I’ll link the rest when they’re available:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Txt90iL-XzM&quot;&gt;I’m pwned. You’re pwned. We’re all pwnd.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Containers and Serverless with AWS&lt;/li&gt;
  &lt;li&gt;The enterprise DevOps challenge&lt;/li&gt;
  &lt;li&gt;Adapting ASP.NET Core MVC to your needs&lt;/li&gt;
  &lt;li&gt;Finding your service boundaries - a practical guide&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=UJxXgugvXmE&quot;&gt;How to teach programming and other things?&lt;/a&gt; -&amp;gt; Felienne actually switched to a new subject at the last moment. I’ll link it when it’s available.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Nn0aYf2kn1w&quot;&gt;Refactoring to functional style&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Do’s and don’ts for serverless and Azure Functions&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;some-scary-stuff&quot;&gt;Some scary stuff&lt;/h1&gt;
&lt;p&gt;Met some great people too - just talk to them, apparently they’re just people too! ;)&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://adamcogan.com/&quot;&gt;Adam Cogan&lt;/a&gt; (Thanks for letting me help you prepare your talk and for the feedback I got from you)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.henkboelman.com/&quot;&gt;Henk Boelman&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/iancooper&quot;&gt;Ian Cooper&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://hollan.io/&quot;&gt;Jeff Hollan&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://marcofolio.net/&quot;&gt;Marco Kuiper&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.dotnetrocks.com/&quot;&gt;Richard Campbell&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.troyhunt.com/&quot;&gt;Troy Hunt&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;finally&quot;&gt;Finally&lt;/h1&gt;
&lt;p&gt;A list of all the sessions I attended, just to give you a sense of what you might have missed ;) For now you can still see the complete agenda at &lt;a href=&quot;https://ndcoslo.com/agenda/&quot;&gt;the NDC website&lt;/a&gt;. Just be sure to be there next year!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Keynote: A penny for every object (Mads Torgersen).&lt;/li&gt;
  &lt;li&gt;I’m pwned. You’re pwned. We’re all pwnd. (Troy Hunt)&lt;/li&gt;
  &lt;li&gt;Implementing the Clean Architecture in .NET Core (Ian Cooper)&lt;/li&gt;
  &lt;li&gt;Containers and Serverless with AWS (Norm Johanson)&lt;/li&gt;
  &lt;li&gt;Give it a REST - Tips for designing and consuming public API’s (Liam Westley)&lt;/li&gt;
  &lt;li&gt;The state of C# - What have I missed? (Filip Ekberg)&lt;/li&gt;
  &lt;li&gt;An opinionated approach to ASP.NET Core (Scott Allen)&lt;/li&gt;
  &lt;li&gt;From SQL to Azure Cosmos DB (Jimmy Bogard)&lt;/li&gt;
  &lt;li&gt;The enterprise DevOps challenge (Roy Osherove)&lt;/li&gt;
  &lt;li&gt;Domain-Driven Design: Hidden lessons from the big blue book (Nick Tune)&lt;/li&gt;
  &lt;li&gt;Planned on going to a session here but really needed a break ;)&lt;/li&gt;
  &lt;li&gt;Adapting ASP.NET Core MVC to your needs (Filip W)&lt;/li&gt;
  &lt;li&gt;Finding your service boundaries - a practical guide (Adam Ralph)&lt;/li&gt;
  &lt;li&gt;How to teach programming and other things? (Felienne)&lt;/li&gt;
  &lt;li&gt;Refactoring to functional style (Venkat Subramaniam)&lt;/li&gt;
  &lt;li&gt;The Hello World Show live (multiple speakers)&lt;/li&gt;
  &lt;li&gt;The history of .NET (Richard Campbell)&lt;/li&gt;
  &lt;li&gt;Kubernetes for .NET developers (Shahid Iqbal)&lt;/li&gt;
  &lt;li&gt;Stop reinventing the wheel with Istio (Mete Atamel)&lt;/li&gt;
  &lt;li&gt;Do’s and dont’s for serverless and Azure Functions (Jeff Hollan)&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Reinier van Maanen</name></author><summary type="html">Joining Xpirit has opened up a lot of cool possibilities for me, like being able to visit conferences as Build or NDC. So let’s talk about my first visit to NDC Oslo, 13-15 june 2018.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://r-vm.com/assets/ndc_oslo_2018/Oslo-NDC.jpg" /></entry><entry><title type="html">Blogging with Jekyll on Windows</title><link href="https://r-vm.com/blogging-with-jekyll-on-windows" rel="alternate" type="text/html" title="Blogging with Jekyll on Windows" /><published>2018-04-29T00:00:00+02:00</published><updated>2018-04-29T00:00:00+02:00</updated><id>https://r-vm.com/Blogging-with-Jekyll-on-Windows</id><content type="html" xml:base="https://r-vm.com/blogging-with-jekyll-on-windows">&lt;p&gt;&lt;img src=&quot;https://r-vm.com/assets/blogging_with_jekyll/logos.png&quot; alt=&quot;Logos&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So! Time to write my first blog. Something simple first, guess I need a few posts to get into this. Judging by the amount of blogs, I’m probably not the first one starting out and probably won’t be the last so I thought I’d share what I did to set up this blog.&lt;!--excerpt_end--&gt;&lt;/p&gt;

&lt;p&gt;First up, I did what I always do when I’m unsure how to solve a problem: Google it! Loads of articles, many about WordPress. But I want something different and even more important, I wanted something I trusted and for things to be simple.&lt;/p&gt;

&lt;p&gt;What I ended up choosing, was a &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; blog on &lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt;: well known to us developers, pretty easy to set up as you’ll see below, no costs, near any GIT repositories I might refer to and last bit not least, a bit of nerding involved.
For those who don’t know, Jekyll is a static site generator and the integration with GitHub is great.&lt;/p&gt;

&lt;p&gt;Mostly I followed instructions and a few guides on the internet, which I’ll refer to in the end, but here’s the summary. Btw, I assume you have knowledge of GIT and how to use it, if you don’t have a look at one of these pages:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://play.instruqt.com/topics/git&quot;&gt;Instruqt&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://gitreal.codeschool.com/&quot;&gt;Codeschool&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://try.github.io/levels/1/challenges/1&quot;&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;step-by-step-instructions&quot;&gt;Step by step instructions:&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;We’ll start by &lt;a href=&quot;https://github.com/join&quot;&gt;creating a GitHub account&lt;/a&gt;. Remember the username, you’ll need it in the next step.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/new&quot;&gt;Create a Git repository&lt;/a&gt; named “yourusername.github.io”. Afterwards, if you head to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://github.com/username/username.github.io/settings&lt;/code&gt; and scroll down to “GitHub pages” it should look like this: &lt;img src=&quot;https://r-vm.com/assets/blogging_with_jekyll/githubpages.png&quot; alt=&quot;GitHub pages&quot; /&gt;. &lt;br /&gt;You can actually stop here and just use GitHub Pages by pushing HTML files to your GIT repository. As I wanted something more fancy, I continued.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Next we’ll setup Jekyll locally. Here I just dove in headfirst, and started fixing the requirements listed by Jekyll. As I was about to Google how to install GCC and Make I realized I was probably doing something wrong and things should be easier. And guess what, on my Windows 10 with the Anniversary Update, things can be a lot easier by using a new feature called WSL, or Windows Subsystem for Linux. Enabling this is pretty straightforward:
    &lt;ol&gt;
      &lt;li&gt;Open your start menu.&lt;/li&gt;
      &lt;li&gt;Type in OptionalFeatures.exe and press enter.&lt;/li&gt;
      &lt;li&gt;Mark the checkbox next to “Windows Subsystem for Linux” and press ok.&lt;/li&gt;
      &lt;li&gt;Finish the installation and reboot when asked.&lt;br /&gt;&lt;br /&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;One more thing before actually starting with Jekyll is installing &lt;a href=&quot;https://www.microsoft.com/store/productId/9NBLGGH4MSV6&quot;&gt;Ubuntu from the Windows Store&lt;/a&gt;. Afterwards, you have Bash on Windows! Pretty awesome :)
&lt;img src=&quot;https://r-vm.com/assets/blogging_with_jekyll/ubuntuonwindows.png&quot; alt=&quot;Ubuntu&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;As I just followed the guide from Jekyll at this point (which just states that you must have Bash on Ubuntu on Windows enabled and doesn’t explain how – hence steps 3 and 4), &lt;a href=&quot;https://jekyllrb.com/docs/windows/&quot;&gt;here it is&lt;/a&gt;. As you’ll see, Windows isn’t officially supported, but it works fine on my machine ;)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Next we’ll clone the GIT repo we created earlier: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git clone https://github.com/rvanmaanen/rvanmaanen.github.io.git&lt;/code&gt; in my case. I did this in the directory &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/mnt/c/Projects&lt;/code&gt;, so I can access the files from Windows as well without using Ubuntu. All your drives are mounted here by default, so this directory is the same as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C:\Projects&lt;/code&gt;. GIT is available by default in Ubuntu, so no need to install anything.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;From the directory containing your GIT repo (again, that would be &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/mnt/c/Projects/rvanmaanen.github.io&lt;/code&gt; in my case), execute the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll new .&lt;/code&gt;, which creates a new blog in your current directory.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Staying in the same directory, run the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt; to spin up a temporary webserver so you can &lt;a href=&quot;http://localhost:4000/&quot;&gt;view your blog locally&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If everything is working as expected, you can start tracking all the files with GIT, commit them and then push your changes to your remote, before making any more changes. After a few minutes you should see your blog live at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://username.github.io&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Have a look at the _config.yml for settings for your blog, like any usernames for your social media, a description, the title and more. I wouldn’t recommend changing the theme at this time, more on that later.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Startup the local webserver again to view your blog, so you can see what your doing in the next steps. Remove the dummy blogpost in the _posts directory and create a new file following the same naming convention (year-month-day-title.md): &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2018-04-29-Blogging-with-Jekyll-on-Windows.md&lt;/code&gt;. If you refresh your blog you should see the changes immediately. I use &lt;a href=&quot;https://notepad-plus-plus.org/&quot;&gt;Notepad++&lt;/a&gt; for this.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;To provide a title and give your post a nice layout, place the following in the top of your markdown file: &lt;br /&gt;
---&lt;br /&gt;
layout: post&lt;br /&gt;
title:  “Blogging with Jekyll on Windows”&lt;br /&gt;
categories: jekyll windows&lt;br /&gt;
---&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Start writing, use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt; often to see the results and push your changes to GitHub when you’re ready. These are just the basics, there is &lt;a href=&quot;https://guides.github.com/features/mastering-markdown/&quot;&gt;a lot you can do with markdown files&lt;/a&gt; and &lt;a href=&quot;https://jekyllrb.com/docs/&quot;&gt;Jekyll&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h1 id=&quot;a-couple-other-websites-i-used&quot;&gt;A couple other websites I used:&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub pages&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.github.com/articles/viewing-jekyll-build-error-messages/&quot;&gt;Viewing Jekyll build error messages&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://help.github.com/articles/using-jekyll-as-a-static-site-generator-with-github-pages/&quot;&gt;Using Jekyll as a static site generator with GitHub pages&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&quot;&gt;Markdown cheatsheet&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/docs/posts/&quot;&gt;Jekyll posts documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Reinier van Maanen</name></author><summary type="html">So! Time to write my first blog. Something simple first, guess I need a few posts to get into this. Judging by the amount of blogs, I’m probably not the first one starting out and probably won’t be the last so I thought I’d share what I did to set up this blog.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://r-vm.com/assets/blogging_with_jekyll/logos.png" /></entry></feed>